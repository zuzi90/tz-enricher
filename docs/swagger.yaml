basePath: /
definitions:
  models.User:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      gender:
        type: string
      id:
        type: integer
      isDeleted:
        type: boolean
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updatedAt:
        type: string
    type: object
  models.UserCreate:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  models.UserUpdate:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:5005
info:
  contact: {}
  description: API server Resolver
  title: Resolver API
  version: "1.0"
paths:
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Создать пользователя
      tags:
      - user
  /api/v1/users/:
    get:
      description: get users
      parameters:
      - description: text
        in: query
        name: text
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: sorting
        in: query
        name: sorting
        type: string
      - description: descending
        in: query
        name: descending
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Получить список пользователей
      tags:
      - user
  /api/v1/users/{id}:
    delete:
      description: delete user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Удалить пользователя
      tags:
      - user
    get:
      description: get user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Получить пользователя по id
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Обновить пользователя
      tags:
      - user
swagger: "2.0"
